/*
Бинарный поиск O(log N). Только отсортированный массив
1) Обозначить границы поиска
2) Найти середину массива. (Складываем нижнюю и верхнюю границу и делим на 2 и округляем в меньшую сторону)
3) Создать цикл пока нижняя граница меньше или равна верхней границе
4) Если число из середины равно искомому, то вернуть его индекс,
   иначе если это число больше искомого, то сместить верхнюю границу на середину минус 1,
   если число меньше искомого, то сместить верхнюю границу на середину плюс 1.
   Если не найдено, то возвращаем null
*/

const arr = [1, 2, 3, 4, 5, 6, 7, 8];

const binarySearch = (arr, target) => {
  let low = 0;
  let high = arr.length - 1;

  while (low <= high) {
    const mid = ~~((low + high) / 2);
    if (arr[mid] === target) return mid;

    if (arr[mid] > target) {
      high = mid - 1;
    } else {
      low = mid + 1;
    }
  }

  return null;
};

console.log(binarySearch(arr, 5)); // 4
console.log(binarySearch(arr, 15)); // null
